services:
  game-server:
    build:
      context: .
      dockerfile: game-server/Dockerfile
    env_file:
      - .env
    ports:
      - ${SPIRE_GAME_SERVER_PORT}:${SPIRE_GAME_SERVER_PORT}
      - ${SPIRE_GAME_SERVER_CONTROL_PORT}:${SPIRE_GAME_SERVER_CONTROL_PORT}
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - game-server-cert.pem
      - game-server-key.pem
      - db-password.key
      - token.key
  
  lobby-server:
    build:
      context: .
      dockerfile: lobby-server/Dockerfile
    env_file:
      - .env
    ports:
      - ${SPIRE_LOBBY_SERVER_PORT}:${SPIRE_LOBBY_SERVER_PORT}
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - lobby-server-cert.pem
      - lobby-server-key.pem
      - token.key
      - db-password.key

  db:
    build:
      context: .
      dockerfile: db/Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${SPIRE_DB_USER}
      - POSTGRES_PASSWORD_FILE=${SPIRE_DB_PASSWORD_FILE}
      - POSTGRES_DB=${SPIRE_DB_NAME}
    ports:
      - ${SPIRE_DB_PORT}:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    secrets:
      - db-password.key
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${SPIRE_DB_USER} -d ${SPIRE_DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  db-admin:
    image: dpage/pgadmin4:latest
    profiles:
      - admin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${SPIRE_DB_ADMIN_USER}
      - PGADMIN_DEFAULT_PASSWORD_FILE=${SPIRE_DB_ADMIN_PASSWORD_FILE}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${SPIRE_DB_ADMIN_PORT}:80
    volumes:
      - db-admin-data:/var/lib/pgadmin
    secrets:
      - db-admin-password.key
    restart: unless-stopped

volumes:
  db-data:
  db-admin-data:

secrets:
  token.key:
    file: secrets/token.key
  game-server-cert.pem:
    file: secrets/game-server-cert.pem
  game-server-key.pem:
    file: secrets/game-server-key.pem
  lobby-server-cert.pem:
    file: secrets/lobby-server-cert.pem
  lobby-server-key.pem:
    file: secrets/lobby-server-key.pem
  db-password.key:
    file: secrets/db-password.key
  db-admin-password.key:
    file: secrets/db-admin-password.key
