services:
  game-server:
    build:
      context: .
      dockerfile: game-server/Dockerfile
    env_file:
      - .env
    ports:
      - ${SPIRE_GAME_SERVER_PORT}:${SPIRE_GAME_SERVER_PORT}
      - ${SPIRE_GAME_SERVER_CONTROL_PORT}:${SPIRE_GAME_SERVER_CONTROL_PORT}
    networks:
      - dev-network
    hostname: game.spire.dev
    secrets:
      - game-server-cert.pem
      - game-server-key.pem
      - db-password.key
      - token.key
  
  lobby-server:
    build:
      context: .
      dockerfile: lobby-server/Dockerfile
    env_file:
      - .env
    ports:
      - ${SPIRE_LOBBY_SERVER_PORT}:${SPIRE_LOBBY_SERVER_PORT}
    networks:
      - dev-network
    hostname: lobby.spire.dev
    secrets:
      - lobby-server-cert.pem
      - lobby-server-key.pem
      - token.key
      - db-password.key

  db:
    build: db
    env_file:
      - .env
    environment:
      - GEL_SERVER_USER=${SPIRE_DB_USER}
      - GEL_SERVER_PASSWORD_FILE=${SPIRE_DB_PASSWORD_FILE}
      - GEL_SERVER_TLS_CERT_MODE=generate_self_signed
      # - GEL_SERVER_TLS_CERT_FILE=${SPIRE_DB_TLS_CERT_FILE}
      # - GEL_SERVER_TLS_KEY_FILE=${SPIRE_DB_TLS_KEY_FILE}
      - GEL_SERVER_INSTANCE_NAME=spire-db
      - GEL_SERVER_ADMIN_UI=enabled
    ports:
      - ${SPIRE_DB_PORT}:${SPIRE_DB_PORT}
    networks:
      - dev-network
    hostname: db.spire.dev
    volumes:
      - db-data:/var/lib/gel/data
    secrets:
      - db-password.key
      - db-cert.pem
      - db-key.pem

volumes:
  db-data:

networks:
  dev-network:
    driver: bridge

secrets:
  token.key:
    file: secrets/token.key
  game-server-cert.pem:
    file: secrets/game-server-cert.pem
  game-server-key.pem:
    file: secrets/game-server-key.pem
  db-cert.pem:
    file: secrets/db-cert.pem
  db-key.pem:
    file: secrets/db-key.pem
  db-password.key:
    file: secrets/db-password.key
  lobby-server-cert.pem:
    file: secrets/lobby-server-cert.pem
  lobby-server-key.pem:
    file: secrets/lobby-server-key.pem
